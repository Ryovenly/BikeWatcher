
@{
    ViewData["Title"] = "Map";
    var villes = ViewBag.AllStation;
}
<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <!-- Nous chargeons les fichiers CDN de Leaflet. Le CSS AVANT le JS -->
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.3.1/dist/leaflet.css" integrity="sha512-Rksm5RenBEKSKFjgI3a41vrjkw4EVPlJ3+OiI65vTjIdo9brlAacEuKOiQ5OFh7cOI1bkDwLqdLw3Zg0cRJAAQ==" crossorigin="" />
    <style type="text/css">
        #map { /* la carte DOIT avoir une hauteur sinon elle n'apparaît pas */
            height: 500px;
        }
    </style>
    <title>Carte</title>
</head>
<body>

    <h1>Map</h1>

    <div id="map">
        <!-- Ici s'affichera la carte -->
    </div>

    <!-- Fichiers Javascript -->
    <script src="https://unpkg.com/leaflet@1.3.1/dist/leaflet.js" integrity="sha512-/Nsx9X4HebavoBvEBuyp3I7od5tA0UzAxs+j83KgC8PU0kgB4XiK4Lfe4y4cgBtaRJQEIFCW+oC506aPT2L1zw==" crossorigin=""></script>
    <script type="text/javascript">


function geoloc(){ // ou tout autre nom de fonction
    var geoSuccess = function(position) { // Ceci s'exécutera si l'utilisateur accepte la géolocalisation
        startPos = position;
        lat = startPos.coords.latitude;
        lon = startPos.coords.longitude;
        console.log("lat: "+lat+" - lon: "+lon);
    };
    var geoFail = function(){ // Ceci s'exécutera si l'utilisateur refuse la géolocalisation
        console.log("refus");
    };
    // La ligne ci-dessous cherche la position de l'utilisateur et déclenchera la demande d'accord
    navigator.geolocation.getCurrentPosition(geoSuccess,geoFail);
}

        var lat = 45.75; //Lyon
        var lon = 4.85;


        var macarte = null;
        var stations = {@foreach (var Station in villes) {
                <text>"@Station.name": { "lat": @Station.lat, "lon":@Station.lng, "bike": "@Station.available_bike_stands", "place": "@Station.bike_stands"},
                </text> }
        };



                // Fonction d'initialisation de la carte
        function initMap() {
            // Créer l'objet "macarte" et l'insèrer dans l'élément HTML qui a l'ID "map"
            macarte = L.map('map').setView([lat, lon], 11);
            // Leaflet ne récupère pas les cartes (tiles) sur un serveur par défaut. Nous devons lui préciser où nous souhaitons les récupérer. Ici, openstreetmap.fr
            L.tileLayer('https://{s}.tile.openstreetmap.fr/osmfr/{z}/{x}/{y}.png', {
                // Il est toujours bien de laisser le lien vers la source des données
                attribution: 'données © OpenStreetMap/ODbL - rendu OSM France',
                minZoom: 1,
                maxZoom: 20


            }).addTo(macarte);

	for (station in stations) {
        var marker = L.marker([stations[station].lat, stations[station].lon]).addTo(macarte);
        marker.bindPopup("<b>Place : </b>" + station + "<br>" + "<b>Nombre de vélo dispo : </b>" + stations[station].bike + "<br>" + "<b>Nombre de place disponible pour les vélos : </b>" + stations[station].place)
	}     
        }
        window.onload = function(){
            // Fonction d'initialisation qui s'exécute lorsque le DOM est chargé
            initMap();
        };
    </script>
</body>
</html>


